{"remainingRequest":"D:\\termination project\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\termination project\\front\\src\\views\\teacher\\AddExam.vue?vue&type=style&index=0&id=61524b2e&scoped=true&lang=scss&","dependencies":[{"path":"D:\\termination project\\front\\src\\views\\teacher\\AddExam.vue","mtime":1683945797422},{"path":"D:\\termination project\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICIuLi8uLi9hc3NldHMvY3NzL3RlYWNoZXIvYWRkRXhhbSI7DQo="},{"version":3,"sources":["AddExam.vue"],"names":[],"mappings":";AAklBA","file":"AddExam.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\r\n  <el-container>\r\n    <el-header height=\"220\">\r\n      <el-steps :active=\"curStep\" simple>\r\n        <el-step title=\"setup\" icon=\"el-icon-edit\"></el-step>\r\n        <el-step title=\"priority\" icon=\"el-icon-lock\"></el-step>\r\n        <el-step title=\"additional \" icon=\"el-icon-setting\"></el-step>\r\n      </el-steps>\r\n\r\n      <el-button style=\"margin-top: 10px\" v-show=\"curStep !== 1\" @click=\"curStep--\">上一步</el-button>\r\n\r\n      <el-button style=\"float:right;margin-top: 10px\" v-show=\"curStep !== 3\" type=\"primary\" @click=\"curStep++\">下一步\r\n      </el-button>\r\n      <el-button style=\"float:right;margin-top: 10px\" v-show=\"curStep === 3\" type=\"primary\" @click=\"addExam\">提交\r\n      </el-button>\r\n    </el-header>\r\n\r\n    <el-main>\r\n      <!--设置试题信息-->\r\n      <el-card v-show=\"curStep === 1\">\r\n\r\n        <el-radio-group v-model=\"makeModel\"\r\n                        @change=\"makeModelChange\"\r\n                        size=\"medium\">\r\n          <el-radio :label=\"1\" border>题库组卷</el-radio>\r\n          <el-radio :label=\"2\" border>自由组卷</el-radio>\r\n        </el-radio-group>\r\n\r\n        <span style=\"float: right;color: red;font-weight: bold\" v-show=\"makeModel === 2\">\r\n          {{ '试卷总分：' + sumTotalScore }}</span>\r\n\r\n        <!-- 题库组卷内容-->\r\n        <div v-show=\"makeModel === 1\" style=\"margin-top: 25px\">\r\n          <el-button icon=\"el-icon-plus\" size=\"mini\" @click=\"addBank\">Add question bank</el-button>\r\n\r\n          <!--存放题目的信息-->\r\n          <el-table :data=\"addExamQuestion\" border style=\"margin-top: 10px\">\r\n\r\n            <el-table-column label=\"题库\" width=\"155\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <el-select clearable v-model=\"scope.row.bankName\" placeholder=\"请选择题库\"\r\n                           style=\"margin-left: 5px\">\r\n                  <el-option\r\n                    v-for=\"item in allBank\"\r\n                    :key=\"item.questionBank.bankId\"\r\n                    :label=\"item.questionBank.bankName\"\r\n                    :value=\"item.questionBank.bankName\">\r\n                  </el-option>\r\n                </el-select>\r\n              </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column label=\"单选题分数\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input v-model=\"scope.row.singleScore\" style=\"margin-left: 5px\"></el-input>\r\n              </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column label=\"多选题分数\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input v-model=\"scope.row.multipleScore\" style=\"margin-left: 5px\"></el-input>\r\n              </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column label=\"判断题分数\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input v-model=\"scope.row.judgeScore\" style=\"margin-left: 5px\"></el-input>\r\n              </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column label=\"简答题分数\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <el-input v-model=\"scope.row.shortScore\" style=\"margin-left: 5px\"></el-input>\r\n              </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column label=\"操作\" width=\"80\" align=\"center\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button type=\"danger\" icon=\"el-icon-delete\" circle @click=\"delBank(scope.row.bankId)\"></el-button>\r\n              </template>\r\n            </el-table-column>\r\n\r\n          </el-table>\r\n        </div>\r\n\r\n        <!-- 自由组卷内容-->\r\n        <div v-show=\"makeModel === 2\">\r\n          <el-card>\r\n            <h1>题目列表</h1>\r\n            <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"small\" @click=\"showAddDialog\">添加试题</el-button>\r\n\r\n            <el-table :data=\"addExamQuestion2\" border style=\"margin-top: 10px\">\r\n\r\n              <el-table-column\r\n                type=\"index\"\r\n                label=\"序号\"\r\n                width=\"50\">\r\n              </el-table-column>\r\n\r\n              <el-table-column label=\"题目内容\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                  {{ scope.row.questionContent }}\r\n                </template>\r\n              </el-table-column>\r\n\r\n              <el-table-column align=\"center\"\r\n                               label=\"题目类型\">\r\n                <template slot-scope=\"scope\">\r\n                  <span v-if=\"scope.row.questionType === 1\">Single choice</span>\r\n                  <span v-else-if=\"scope.row.questionType === 2\">Multiple choice</span>\r\n                  <span v-else-if=\"scope.row.questionType === 3\">True or false</span>\r\n                  <span v-else-if=\"scope.row.questionType === 4\">Short answer</span>\r\n                </template>\r\n              </el-table-column>\r\n\r\n              <el-table-column label=\"单题分数\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-input v-model=\"scope.row.score\" style=\"margin-left: 5px\"></el-input>\r\n                </template>\r\n              </el-table-column>\r\n\r\n              <el-table-column label=\"操作\" width=\"80\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button type=\"danger\" icon=\"el-icon-delete\" circle\r\n                             @click=\"delQuestion(scope.row.questionId)\"></el-button>\r\n                </template>\r\n              </el-table-column>\r\n            </el-table>\r\n\r\n          </el-card>\r\n        </div>\r\n      </el-card>\r\n\r\n      <!--设置考试权限-->\r\n      <el-card v-show=\"curStep === 2\">\r\n        <el-radio-group v-model=\"examAuthority\" size=\"medium\">\r\n          <el-radio :label=\"1\" border>完全公开</el-radio>\r\n          <el-radio :label=\"2\" border>需要密码</el-radio>\r\n        </el-radio-group>\r\n\r\n        <el-alert style=\"margin-top: 15px\"\r\n                  :title=\"examAuthority === 1? '开放的，任何人都可以进行考试！' : '半开放的，知道密码的人员才可以考试！'\"\r\n                  type=\"warning\">\r\n        </el-alert>\r\n\r\n        <el-input style=\"margin-top: 15px;width: 20%\" v-model=\"examPassword\" v-show=\"examAuthority === 2\"\r\n                  type=\"password\" show-password placeholder=\"输入考试密码\"></el-input>\r\n      </el-card>\r\n\r\n      <!--设置考试信息-->\r\n      <el-card v-show=\"curStep === 3\">\r\n\r\n        <el-form :model=\"examInfo\" :rules=\"examInfoRules\" ref=\"examInfoForm\" label-width=\"100px\">\r\n\r\n          <el-form-item label=\"Examination name\" prop=\"examName\">\r\n            <el-input v-model=\"examInfo.examName\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"Examination description\" prop=\"examDesc\">\r\n            <el-input v-model=\"examInfo.examDesc\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item v-show=\"makeModel === 2\" label=\"Total score\" prop=\"totalScore\">\r\n            <el-input-number :value=\"sumTotalScore\" :disabled=\"true\"></el-input-number>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"及格分数\" prop=\"passScore\">\r\n            <el-input-number v-model=\"examInfo.passScore\" :min=\"1\" :max=\"parseInt(sumTotalScore)\"></el-input-number>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"考试时长(分钟)\" prop=\"examDuration\">\r\n            <el-input-number v-model=\"examInfo.examDuration\" :min=\"1\" :max=\"120\"></el-input-number>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"考试开始时间\" prop=\"startTime\">\r\n            <el-date-picker style=\"margin-left: 5px\"\r\n                            v-model=\"examInfo.startTime\"\r\n                            type=\"date\" placeholder=\"考试开始时间\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"考试结束时间\" prop=\"endTime\">\r\n            <el-date-picker style=\"margin-left: 5px\"\r\n                            v-model=\"examInfo.endTime\"\r\n                            type=\"date\" placeholder=\"考试结束时间\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n\r\n        </el-form>\r\n\r\n      </el-card>\r\n    </el-main>\r\n\r\n    <el-dialog title=\"Add question\" :visible.sync=\"showQuestionDialog\" width=\"80%\" center>\r\n      <el-row>\r\n        <el-select @change=\"typeChange\" clearable v-model=\"queryInfo.questionType\" placeholder=\"Select a question type\">\r\n          <el-option\r\n            v-for=\"item in questionType\"\r\n            :key=\"item.id\"\r\n            :label=\"item.name\"\r\n            :value=\"item.id\">\r\n          </el-option>\r\n        </el-select>\r\n\r\n        <el-select @change=\"bankChange\" clearable v-model=\"queryInfo.questionBank\" placeholder=\"请选择题库\"\r\n                   style=\"margin-left: 5px\">\r\n          <el-option\r\n            v-for=\"item in allBank\"\r\n            :key=\"item.questionBank.bankId\"\r\n            :label=\"item.questionBank.bankName\"\r\n            :value=\"item.questionBank.bankName\">\r\n          </el-option>\r\n        </el-select>\r\n\r\n        <el-input v-model=\"queryInfo.questionContent\" @blur=\"getQuestionInfo\" placeholder=\"题目内容\"\r\n                  style=\"margin-left: 5px;width: 220px\"\r\n                  prefix-icon=\"el-icon-search\"></el-input>\r\n        <el-button type=\"primary\" @click=\"addQuToFree\" style=\"float: right\">确认{{ selectedTable.length }}项</el-button>\r\n      </el-row>\r\n\r\n      <el-table\r\n        ref=\"questionTable\"\r\n        highlight-current-row\r\n        v-loading=\"loading\"\r\n        :border=\"true\"\r\n        :data=\"questionInfo\"\r\n        tooltip-effect=\"dark\"\r\n        style=\"width: 100%;margin-top: 25px;\" @selection-change=\"handleTableSectionChange\">\r\n\r\n        <el-table-column align=\"center\"\r\n                         type=\"selection\"\r\n                         width=\"55\">\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\"\r\n                         label=\"题目类型\">\r\n          <template slot-scope=\"scope\">\r\n            <span v-if=\"scope.row.quType === 1\">Single choice</span>\r\n            <span v-else-if=\"scope.row.quType === 2\">Multiple choice</span>\r\n            <span v-else-if=\"scope.row.quType === 3\">True or false</span>\r\n            <span v-else-if=\"scope.row.quType === 4\">Short answer</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\" label=\"题目内容\">\r\n          <template slot-scope=\"scope\">\r\n            <span class=\"quContent\">{{ scope.row.quContent }}</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\"\r\n                         label=\"难度\">\r\n          <template slot-scope=\"scope\">\r\n            <span v-if=\"scope.row.level === 1\">简单</span>\r\n            <span v-if=\"scope.row.level === 2\">中等</span>\r\n            <span v-if=\"scope.row.level === 3\">困难</span>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\"\r\n                         prop=\"quBankName\"\r\n                         label=\"所属题库\">\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\"\r\n                         prop=\"createPerson\"\r\n                         label=\"创建人\">\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\"\r\n                         label=\"创建时间\">\r\n          <template slot-scope=\"scope\">\r\n            {{ scope.row.createTime }}\r\n          </template>\r\n        </el-table-column>\r\n\r\n\r\n      </el-table>\r\n      <!--分页-->\r\n      <el-pagination style=\"margin-top: 25px\"\r\n                     @size-change=\"handleSizeChange\"\r\n                     @current-change=\"handleCurrentChange\"\r\n                     :current-page=\"queryInfo.pageNo\"\r\n                     :page-sizes=\"[10, 20, 30, 50]\"\r\n                     :page-size=\"queryInfo.pageSize\"\r\n                     layout=\"total, sizes, prev, pager, next, jumper\"\r\n                     :total=\"total\">\r\n      </el-pagination>\r\n    </el-dialog>\r\n\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport questionBankApi from '@/api/questionBank'\r\nimport question from '@/api/question'\r\nimport utils from '@/utils/utils'\r\nimport examApi from '@/api/exam'\r\n\r\nexport default {\r\n  name: 'AddExam',\r\n  data () {\r\n    return {\r\n      //查询题目的参数\r\n      queryInfo: {\r\n        //题目类型下拉款所选的内容\r\n        'questionType': '',\r\n        'questionBank': '',\r\n        'questionContent': '',\r\n        'pageNo': 1,\r\n        'pageSize': 10\r\n      },\r\n      //题目类型\r\n      questionType: [\r\n        {\r\n          id: 1,\r\n          name: 'Single choice',\r\n        },\r\n        {\r\n          id: 2,\r\n          name: 'Multiple choice',\r\n        },\r\n        {\r\n          id: 3,\r\n          name: 'True or false',\r\n        },\r\n        {\r\n          id: 4,\r\n          name: 'Short answer',\r\n        },\r\n      ],\r\n      //当前的步骤\r\n      curStep: 1,\r\n      //组卷模式\r\n      makeModel: 1,\r\n      //添加考试题目信息(makeModel = 1的时候)\r\n      addExamQuestion: [],\r\n      //所有题库信息\r\n      allBank: [],\r\n      //添加考试题目信息(makeModel = 2 的时候)\r\n      addExamQuestion2: [],\r\n      //所有题目的对话框\r\n      showQuestionDialog: false,\r\n      //对话框中题目表格的加载\r\n      loading: true,\r\n      //所有题目的信息\r\n      questionInfo: [],\r\n      //所有题目的对话框中表格被选中\r\n      selectedTable: [],\r\n      //所有题目总数\r\n      total: 0,\r\n      //考试权限(1公开, 2密码)\r\n      examAuthority: 1,\r\n      //考试密码(权限为2时的密码)\r\n      examPassword: '',\r\n      //补充的考试信息\r\n      examInfo: {\r\n        'examId': '',\r\n        'examDesc': '',\r\n        'passScore': 0,\r\n        'examDuration': 0,\r\n        'startTime': '',\r\n        'endTime': ''\r\n      },\r\n      //补充的考试信息的表单验证\r\n      examInfoRules: {\r\n        examName: [\r\n          {\r\n            required: true,\r\n            message: '请输入考试名称',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        passScore: [\r\n          {\r\n            required: true,\r\n            message: '请输入通过分数',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        examDuration: [\r\n          {\r\n            required: true,\r\n            message: '请输入考试时长',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n      },\r\n    }\r\n  },\r\n  props: ['tagInfo'],\r\n  created () {\r\n    //一创建就改变头部的面包屑\r\n    this.$emit('giveChildChangeBreakInfo', '添加考试', '添加考试')\r\n    this.createTagsInParent()\r\n    this.getBankInfo()\r\n  },\r\n  methods: {\r\n    //向父组件中添加头部的tags标签\r\n    createTagsInParent () {\r\n      let flag = false\r\n      this.tagInfo.map(item => {\r\n        //如果tags全部符合\r\n        if (item.name === '添加考试' && item.url === this.$route.path) {\r\n          flag = true\r\n        } else if (item.name === '添加考试' && item.url !== this.$route.path) {\r\n          this.$emit('updateTagInfo', '添加考试', this.$route.path)\r\n          flag = true\r\n        }\r\n      })\r\n      if (!flag) this.$emit('giveChildAddTag', '添加考试', this.$route.path)\r\n    },\r\n    //获取所有的题库信息\r\n    getBankInfo () {\r\n      questionBankApi.getBankHaveQuestionSumByType({\r\n          'pageNo': 1,\r\n          'pageSize': 9999\r\n        }).then((resp) => {\r\n        if (resp.code === 200) {\r\n          this.allBank = resp.data.data\r\n        } else {\r\n          this.$notify({\r\n            title: 'Tips',\r\n            message: resp.message,\r\n            type: 'error',\r\n            duration: 2000\r\n          })\r\n        }\r\n      })\r\n    },\r\n    //删除当前需要去除的题库\r\n    delBank (bankId) {\r\n      this.addExamQuestion.forEach((item, index) => {\r\n        if (item.bankId === bankId) this.addExamQuestion.splice(index, 1)\r\n      })\r\n    },\r\n    //添加题库组卷中的题库\r\n    addBank () {\r\n      this.addExamQuestion.push(\r\n        {\r\n          'bankName': '',\r\n          'singleScore': 1,\r\n          'multipleScore': 1,\r\n          'judgeScore': 1,\r\n          'shortScore': 1\r\n        })\r\n    },\r\n    //自由组卷时添加试题\r\n    showAddDialog () {\r\n      this.showQuestionDialog = true\r\n      this.getQuestionInfo()\r\n    },\r\n    //自由组卷时删除试题\r\n    delQuestion (questionId) {\r\n      this.addExamQuestion2.forEach((item, index) => {\r\n        if (item.questionId === questionId) this.addExamQuestion2.splice(index, 1)\r\n      })\r\n    },\r\n    //题目类型变化\r\n    typeChange (val) {\r\n      this.queryInfo.questionType = val\r\n      this.getQuestionInfo()\r\n    },\r\n    //题库变化\r\n    bankChange (val) {\r\n      this.queryInfo.questionBank = val\r\n      this.getQuestionInfo()\r\n    },\r\n    //获取题目信息\r\n    getQuestionInfo () {\r\n      question.getQuestion(this.queryInfo).then((resp) => {\r\n        if (resp.code === 200) {\r\n          this.questionInfo = resp.data.data\r\n          this.total = resp.data.total\r\n          this.loading = false\r\n        } else {\r\n          this.$notify({\r\n            title: 'Tips',\r\n            message: '获取题库信息失败',\r\n            type: 'error',\r\n            duration: 2000\r\n          })\r\n        }\r\n      })\r\n    },\r\n    //处理表格被选中\r\n    handleTableSectionChange (val) {\r\n      this.selectedTable = val\r\n    },\r\n    //分页页面大小改变\r\n    handleSizeChange (val) {\r\n      this.queryInfo.pageSize = val\r\n      this.getQuestionInfo()\r\n    },\r\n    //分页插件的页数\r\n    handleCurrentChange (val) {\r\n      this.queryInfo.pageNo = val\r\n      this.getQuestionInfo()\r\n    },\r\n    //自由组卷中选中的题目添加进去\r\n    addQuToFree () {\r\n      this.selectedTable.forEach(item => {\r\n        if (!this.addExamQuestion2.some(i2 => {\r\n          return i2.questionId === item.id\r\n        })) {//不存在有当前题目\r\n          this.addExamQuestion2.push({\r\n            'questionId': item.id,\r\n            'questionContent': item.quContent,\r\n            'questionType': item.quType,\r\n            'score': 1\r\n          })\r\n        }\r\n      })\r\n      this.showQuestionDialog = false\r\n    },\r\n    //组卷模式变化\r\n    makeModelChange () {\r\n      this.$confirm('此操作将丢失当前组卷数据, 是否继续?', 'Tips', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.makeModel === 1 ? this.addExamQuestion2 = [] : this.addExamQuestion = []\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    //添加考试\r\n    addExam () {\r\n      utils.validFormAndInvoke(this.$refs['examInfoForm'], () => {\r\n        if (this.addExamQuestion.length !== 0 || this.addExamQuestion2.length !== 0) {\r\n          //构造数据对象(考试信息)\r\n          let exam = this.examInfo\r\n          exam.totalScore = this.sumTotalScore\r\n          exam.status = 1\r\n          //权限id设置\r\n          exam.type = this.examAuthority\r\n          if (this.examAuthority === 2) {//考试密码\r\n            if (this.examPassword === '') {// 当前用户选择了需要密码权限,但是密码为空\r\n              this.$message.error('当前权限为需要密码,但是密码为空')\r\n              return false\r\n            }\r\n            exam.password = this.examPassword\r\n          }\r\n          //题库组卷模式\r\n          if (this.makeModel === 1 && !this.addExamQuestion.some(item => item.bankId === '')) {\r\n            console.log(this.addExamQuestion)\r\n            let bankNames = []\r\n            this.addExamQuestion.forEach(item => bankNames.push(item.bankName))\r\n            exam.bankNames = bankNames.join(',')\r\n            exam.singleScore = this.addExamQuestion[0].singleScore\r\n            exam.multipleScore = this.addExamQuestion[0].multipleScore\r\n            exam.judgeScore = this.addExamQuestion[0].judgeScore\r\n            exam.shortScore = this.addExamQuestion[0].shortScore\r\n            examApi.addExamByBank(exam).then((resp) => {\r\n              if (resp.code === 200) this.$router.push('/examManage')\r\n            })\r\n          } else if (this.makeModel === 2) {//自由组卷模式\r\n            //题目id数组\r\n            let questionIds = []\r\n            //题目成绩数组\r\n            let scores = []\r\n            this.addExamQuestion2.forEach(item => {\r\n              questionIds.push(item.questionId)\r\n              scores.push(item.score)\r\n            })\r\n            exam.questionIds = questionIds.join(',')\r\n            exam.scores = scores.join(',')\r\n            console.log(exam)\r\n            examApi.addExamByQuestionList(exam).then((resp) => {\r\n              if (resp.code === 200) this.$router.push('/examManage')\r\n            })\r\n          } else {\r\n            this.$message.error('请检查考试规则设置是否完整')\r\n          }\r\n        }\r\n      }, '请检查考试规则设置是否完整')\r\n    }\r\n  },\r\n  computed: {\r\n    //计算总分\r\n    sumTotalScore () {\r\n      if (this.makeModel === 2) {\r\n        let score = 0\r\n        this.addExamQuestion2.forEach(item => {\r\n          score += parseInt(item.score)\r\n        })\r\n        return score\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import \"../../assets/css/teacher/addExam\";\r\n</style>\r\n"]}]}