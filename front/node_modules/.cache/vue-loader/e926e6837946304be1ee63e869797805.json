{"remainingRequest":"D:\\termination project\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\termination project\\front\\src\\views\\index\\Main.vue?vue&type=style&index=0&id=1c6d4f90&scoped=true&lang=scss&","dependencies":[{"path":"D:\\termination project\\front\\src\\views\\index\\Main.vue","mtime":1683941086798},{"path":"D:\\termination project\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpAaW1wb3J0ICIuLi8uLi9hc3NldHMvY3NzL2luZGV4L21haW4iOw0KDQo="},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";AA2fA","file":"Main.vue","sourceRoot":"src/views/index","sourcesContent":["<template>\r\n  <el-container>\r\n    <!--用户头部菜单-->\r\n    <el-aside id=\"aside\" width=\"210px\">\r\n      <el-menu :default-active=\"activeMenu\" @select=\"handleSelect\" :router=\"true\" :collapse=\"isCollapse\">\r\n        <el-menu-item index=\"/index\" disabled style=\"text-align: center\">\r\n          <i class=\"el-icon-sunny\"></i>\r\n          <span slot=\"title\">\r\n            Online Examination System\r\n          </span>\r\n        </el-menu-item>\r\n\r\n        <!-- 单独的导航 -->\r\n        <el-menu-item @click=\"changeBreadInfo(menuInfo[0].topMenuName,menuInfo[0].topMenuName,menuInfo[0].url)\"\r\n                      index=\"/dashboard\"\r\n                      v-if=\"!menuInfo[0].submenu\">\r\n          <i :class=\"menuInfo[0].topIcon\"></i>\r\n          <span slot=\"title\">{{ menuInfo[0].topMenuName }}</span>\r\n        </el-menu-item>\r\n\r\n        <!--具有子导航的-->\r\n        <el-submenu v-if=\"menu.submenu\" v-for=\"(menu,index) in menuInfo\" :key=\"index\" :index=\"index+''\">\r\n          <template slot=\"title\">\r\n            <i :class=\"menu.topIcon\"></i>\r\n            <span slot=\"title\">{{ menu.topMenuName }}</span>\r\n          </template>\r\n\r\n          <!--子导航的分组-->\r\n          <el-menu-item-group>\r\n            <el-menu-item @click=\"changeBreadInfo(menu.topMenuName,sub.name,sub.url)\" :index=\"sub.url\"\r\n                          v-for=\"(sub,index) in menu.submenu\" :key=\"index\">\r\n              <i :class=\"sub.icon\"></i>\r\n              <span slot=\"title\">{{ sub.name }}</span>\r\n            </el-menu-item>\r\n          </el-menu-item-group>\r\n\r\n        </el-submenu>\r\n      </el-menu>\r\n    </el-aside>\r\n\r\n    <!--右侧的面板-->\r\n    <el-main>\r\n\r\n      <el-container>\r\n\r\n        <el-header height=\"100px\">\r\n          <el-card class=\"box-card\">\r\n            <div slot=\"header\">\r\n              <!--缩小图标-->\r\n              <el-tooltip class=\"item\" effect=\"dark\" content=\"缩小侧边栏\" placement=\"top-start\">\r\n                <i class=\"el-icon-s-fold\" @click=\"changeIsCollapse\"\r\n                   style=\"cursor:pointer;font-size: 25px;font-weight: 100\"></i>\r\n              </el-tooltip>\r\n\r\n              <!--面包屑-->\r\n              <el-breadcrumb style=\"margin-left: 15px\">\r\n                <el-breadcrumb-item>{{ breadInfo.top }}</el-breadcrumb-item>\r\n                <el-breadcrumb-item>{{ breadInfo.sub }}</el-breadcrumb-item>\r\n              </el-breadcrumb>\r\n\r\n              <!--右侧的个人信息下拉框-->\r\n              <el-dropdown trigger=\"click\" style=\"float: right;color: black;cursor:pointer;\" @command=\"handleCommand\">\r\n                <span class=\"el-dropdown-link\">\r\n                  {{ currentUserInfo.username }}\r\n                  <i class=\"el-icon-caret-bottom\"></i>\r\n                </span>\r\n                <el-dropdown-menu slot=\"dropdown\">\r\n                  <el-dropdown-item command=\"personInfo\">Profile</el-dropdown-item>\r\n                  <el-dropdown-item command=\"logout\">Log out</el-dropdown-item>\r\n                </el-dropdown-menu>\r\n              </el-dropdown>\r\n\r\n\r\n              <!--右侧的放大图标-->\r\n              <el-tooltip effect=\"dark\" content=\"Zoom\" placement=\"top-start\">\r\n                <i class=\"el-icon-full-screen\" id=\"full\" @click=\"fullShow\" style=\"float: right;margin-right:10px;\r\n              margin-bottom:5px;cursor:pointer;font-size: 25px;font-weight: 100\"></i>\r\n              </el-tooltip>\r\n\r\n              <!--右侧的查看公告图标-->\r\n              <el-tooltip effect=\"dark\" content=\"Tips\" placement=\"top-start\">\r\n                <i class=\"el-icon-bell\" @click=\"showSystemNotice\" style=\"float: right;margin-right:10px;\r\n              margin-bottom:5px;cursor:pointer;font-size: 25px;font-weight: 100\"></i>\r\n              </el-tooltip>\r\n            </div>\r\n\r\n           \r\n          </el-card>\r\n        </el-header>\r\n\r\n        <el-main style=\"margin-top: 25px;\">\r\n          <router-view @giveChildChangeBreakInfo=\"giveChildChangeBreakInfo\" @showSystemNotice=\"showSystemNotice\"\r\n                       @giveChildAddTag=\"giveChildAddTag\" :tagInfo=\"tags\" @updateTagInfo=\"updateTagInfo\"></router-view>\r\n        </el-main>\r\n\r\n      </el-container>\r\n\r\n      <el-dialog title=\"Update your profile\" center :visible.sync=\"updateCurrentUserDialog\">\r\n\r\n        <el-form :model=\"currentUserInfo2\" :rules=\"updateUserFormRules\" ref=\"updateUserForm\">\r\n\r\n          <el-form-item label=\"User name\">\r\n            <el-input v-model=\"currentUserInfo2.username\" disabled></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"Real name\" prop=\"trueName\">\r\n            <el-input v-model=\"currentUserInfo2.trueName\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item label=\"Password\" prop=\"password\">\r\n            <el-input v-model=\"currentUserInfo2.password\" placeholder=\"Clean it if you do not update your password\"></el-input>\r\n          </el-form-item>\r\n\r\n        </el-form>\r\n\r\n        <div slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"updateCurrentUserDialog = false\">Cancel</el-button>\r\n          <el-button type=\"primary\" @click=\"updateCurrentUser\">Confirm</el-button>\r\n        </div>\r\n      </el-dialog>\r\n\r\n    </el-main>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport notice from '@/api/notice'\r\nimport menu from '@/api/menu'\r\nimport user from '@/api/user'\r\nimport auth from '@/api/auth'\r\nimport utils from '@/utils/utils'\r\n\r\nexport default {\r\n  name: 'Main',\r\n  data () {\r\n    const validatePassword = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback()\r\n      } else if (value.length < 5) {\r\n        callback(new Error('新密码少于5位数!'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      //菜单信息\r\n      menuInfo: [\r\n        {\r\n          'topIcon': '',\r\n          'url': '',\r\n          'children': [\r\n            {\r\n              'url': ''\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      //面板是否收缩\r\n      isCollapse: false,\r\n      //当前是否全屏显示\r\n      isFullScreen: false,\r\n      //当前登录的用户信息\r\n      currentUserInfo: {\r\n        'username': ''\r\n      },\r\n      //当前激活的菜单\r\n      activeMenu: '',\r\n      //面包屑信息\r\n      breadInfo: {\r\n        'top': 'Introduction',//顶级菜单信息\r\n        'sub': 'Introduction'//当前的菜单信息\r\n      },\r\n      //面包屑下的标签数据\r\n      tags: [\r\n        {\r\n          'name': '产品介绍',\r\n          'url': '/dashboard',\r\n          'highlight': true\r\n        }\r\n      ],\r\n      //跟新当前用户的信息的对话框\r\n      updateCurrentUserDialog: false,\r\n      //当前用户的信息\r\n      currentUserInfo2: {},\r\n      //更新信息表单信息\r\n      updateUserFormRules: {\r\n        trueName: [\r\n          {\r\n            required: true,\r\n            message: '请输入真实姓名',\r\n            trigger: 'blur'\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            validator: validatePassword,\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created () {\r\n    this.getMenu()\r\n    //获取登录用户信息\r\n    this.getUserInfoByCheckToken()\r\n  },\r\n  mounted () {\r\n    //根据当前链接的hash设置对应高亮的菜单\r\n    this.activeMenu = window.location.hash.substring(1)\r\n    document.querySelector('.el-container').style.maxHeight = screen.height + 'px'\r\n    // 根据设备大小调整侧边栏\r\n    if (screen.width <= 1080) {\r\n      this.isCollapse = !this.isCollapse\r\n      document.querySelector('#aside').style.width = 65 + 'px'\r\n      document.querySelector('.el-container').style.minWidth = 1080 + 'px'\r\n    }\r\n  },\r\n  watch: {\r\n    //监察路径变化,改变菜单的高亮\r\n    '$route.path': function (o, n) {\r\n      this.activeMenu = o\r\n      //如果没有该标签就创建改标签\r\n      let flag = false\r\n      //判断是否含有改标签\r\n      this.tags.map(item => {\r\n        if (item.url === this.activeMenu) {//如果有含有该标签\r\n          flag = true\r\n        }\r\n      })\r\n      if (!flag) {//对应链接的标签不存在\r\n        //先找到该标签的名字\r\n        this.createHighlightTag()\r\n      } else {//改标签存在,则高亮\r\n        this.tags.map(item => {\r\n          //取消高亮别的标签\r\n          item.highlight = false\r\n          //高亮当前标签\r\n          if (item.url === this.activeMenu) {\r\n            item.highlight = true\r\n          }\r\n        })\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    //查看系统公告\r\n    showSystemNotice () {\r\n      notice.getCurrentNewNotice().then((resp) => {\r\n        if (resp.code === 200) {\r\n          this.$alert(resp.data, '最新公告', {\r\n            dangerouslyUseHTMLString: true,\r\n            closeOnPressEscape: true,\r\n            lockScroll: false\r\n          })\r\n        } else {\r\n          this.$notify({\r\n            title: 'Tips',\r\n            message: '公告获取失败',\r\n            type: 'error',\r\n            duration: 2000\r\n          })\r\n        }\r\n      })\r\n    },\r\n    //根据token后台判断用户权限,传递相对应的菜单\r\n    getMenu () {\r\n      menu.getMenuInfo().then((resp) => {\r\n        if (resp.code === 200) {\r\n          this.menuInfo = JSON.parse(resp.data)\r\n          //根据链接创建不存在的tag标签并高亮\r\n          this.createHighlightTag()\r\n        } else {//后台认证失败,跳转登录页面\r\n          this.$message.error('权限认证失败')\r\n          this.$router.push('/')\r\n        }\r\n      })\r\n    },\r\n    //放大缩小侧边栏\r\n    changeIsCollapse () {\r\n      const aside = document.querySelector('#aside')\r\n      if (this.isCollapse) {\r\n        aside.style.width = 210 + 'px'\r\n      } else {\r\n        aside.style.width = 65 + 'px'\r\n      }\r\n      this.isCollapse = !this.isCollapse\r\n    },\r\n    //是否全屏显示\r\n    fullShow () {\r\n      let docElm = document.documentElement\r\n      const full = document.querySelector('#full')\r\n      if (this.isFullScreen) {//退出全屏模式\r\n        //切换图标样式\r\n        full.className = 'el-icon-full-screen'\r\n        //W3C\r\n        if (document.exitFullscreen) {\r\n          document.exitFullscreen()\r\n        }\r\n        //FireFox\r\n        else if (document.mozCancelFullScreen) {\r\n          document.mozCancelFullScreen()\r\n        }\r\n        //Chrome等\r\n        else if (document.webkitCancelFullScreen) {\r\n          document.webkitCancelFullScreen()\r\n        }\r\n        //IE11\r\n        else if (document.msExitFullscreen) {\r\n          document.msExitFullscreen()\r\n        }\r\n      } else {//进入全屏模式\r\n        //W3C\r\n        //切换图标样式\r\n        full.className = 'el-icon-switch-button'\r\n        if (docElm.requestFullscreen) {\r\n          docElm.requestFullscreen()\r\n        }\r\n        //FireFox\r\n        else if (docElm.mozRequestFullScreen) {\r\n          docElm.mozRequestFullScreen()\r\n        }\r\n        //Chrome等\r\n        else if (docElm.webkitRequestFullScreen) {\r\n          docElm.webkitRequestFullScreen()\r\n        }\r\n        //IE11\r\n        else if (docElm.msRequestFullscreen) {\r\n          docElm.msRequestFullscreen()\r\n        }\r\n      }\r\n      //改变标志位\r\n      this.isFullScreen = !this.isFullScreen\r\n    },\r\n    //处理右上角下拉菜单的处理事件\r\n    handleCommand (command) {\r\n      if (command === 'logout') {//退出\r\n        this.logout()\r\n      } else if (command === 'personInfo') {\r\n        this.updateCurrentUserDialog = true\r\n        user.getCurrentUser().then((resp) => {\r\n          if (resp.code === 200) {\r\n            resp.data.password = ''\r\n            this.currentUserInfo2 = resp.data\r\n          }\r\n        })\r\n      }\r\n    },\r\n    //退出登录\r\n    async logout () {\r\n      window.localStorage.removeItem('authorization')\r\n      //右侧提示通知\r\n      this.$notify({\r\n        title: 'Tips',\r\n        message: 'Logout success',\r\n        type: 'success',\r\n        duration: 2000\r\n      })\r\n      await this.$router.push('/')\r\n    },\r\n    //检查token获取其中的用户信息\r\n    getUserInfoByCheckToken () {\r\n      auth.checkToken().then(resp => {\r\n        this.currentUserInfo = resp.data\r\n        localStorage.setItem('username', this.currentUserInfo.username)\r\n      }).catch(err => {\r\n        this.$notify({\r\n          title: 'Tips',\r\n          message: err.response.data.errMsg,\r\n          type: 'error',\r\n          duration: 2000\r\n        })\r\n        localStorage.removeItem('authorization')\r\n        this.$router.push('/')\r\n      })\r\n    },\r\n    //关闭tag标签\r\n    handleClose (index) {//当前点击的tag的下标\r\n      if (this.tags[index].highlight) {\r\n        this.tags[index - 1].highlight = true\r\n        //关闭之后,路由调跳转,高亮菜单和标签\r\n        this.$router.push(this.tags[index - 1].url)\r\n        this.handleSelect(this.tags[index - 1].url)\r\n      }\r\n      this.tags.splice(index, 1)\r\n    },\r\n    //菜单的高亮变化\r\n    handleSelect (currentMenu) {\r\n      this.activeMenu = currentMenu\r\n    },\r\n    //处理面包屑信息和面包屑下的标签信息\r\n    changeBreadInfo (curTopMenuName, curMenuName, url) {\r\n      //面包屑信息\r\n      this.breadInfo.top = curTopMenuName\r\n      this.breadInfo.sub = curMenuName\r\n      //标签信息\r\n      let flag = false//当前是否有此菜单信息(防止无限点击,无线生成)\r\n      this.tags.map(item => {\r\n        if (item.name === curMenuName) flag = true\r\n      })\r\n      if (!flag) {//不存在当前点击的菜单\r\n        this.tags.push({\r\n          'name': curMenuName,\r\n          'url': url,\r\n          'highlight': true\r\n        })\r\n      } //高亮菜单tag\r\n      this.changeHighlightTag(curMenuName)\r\n    },\r\n    //处理高亮的tag\r\n    changeHighlightTag (curMenuName) {//当前需要高亮的名字\r\n      let curMenu\r\n      this.tags.map((item, i) => {\r\n        if (item.name === curMenuName) curMenu = item\r\n        item.highlight = item.name === curMenuName\r\n      })\r\n      //调用改变面包屑的方法\r\n      this.changeTopBreakInfo(curMenu.name)\r\n      this.$router.push(curMenu.url)\r\n    },\r\n    //创建当前高亮的tags\r\n    createHighlightTag () {\r\n      //根据链接创建不存在的tag标签并高亮\r\n      let menuName\r\n      this.menuInfo.map(item => {\r\n        if (item.submenu !== undefined) {\r\n          item.submenu.map(subItem => {\r\n            if (subItem.url === this.activeMenu) menuName = subItem.name\r\n          })\r\n        }\r\n      })\r\n      if (menuName !== undefined && this.tags.indexOf(menuName) === -1) {\r\n        this.tags.push({\r\n          'name': menuName,\r\n          'url': this.activeMenu,\r\n          'highlight': true\r\n        })\r\n        //高亮对应的标签\r\n        this.tags.map(item => {\r\n          if (item.url === window.location.hash.substring(1)) this.changeHighlightTag(item.name)\r\n        })\r\n      }\r\n    },\r\n    //改变头部的面包屑信息\r\n    changeTopBreakInfo (subMenuName) {\r\n      let topMenuName\r\n      this.menuInfo.map(item => {\r\n        if (item.submenu !== undefined) {\r\n          item.submenu.map(i2 => {\r\n            if (i2.name === subMenuName) topMenuName = item.topMenuName\r\n          })\r\n        }\r\n      })\r\n      this.breadInfo.top = topMenuName\r\n      this.breadInfo.sub = subMenuName\r\n    },\r\n    //提供给子组件改变面包屑最后的信息\r\n    giveChildChangeBreakInfo (subMenuName, topMenuName) {\r\n      this.breadInfo.sub = subMenuName\r\n      this.breadInfo.top = topMenuName\r\n    },\r\n    //提供给子组件创建tag标签使用\r\n    giveChildAddTag (menuName, url) {\r\n      this.tags.map(item => {\r\n        item.highlight = false\r\n      })\r\n      this.tags.push({\r\n        'name': menuName,\r\n        'url': url,\r\n        'highlight': true\r\n      })\r\n    },\r\n    //提供给子组件修改tag标签使用\r\n    updateTagInfo (menuName, url) {\r\n      this.tags.map((item, index) => {\r\n        item.highlight = false\r\n        if (item.name === menuName) {\r\n          this.tags.splice(index, 1)\r\n        }\r\n      })\r\n      this.tags.push({\r\n        'name': menuName,\r\n        'url': url,\r\n        'highlight': true\r\n      })\r\n    },\r\n    //更新当前用户\r\n    updateCurrentUser () {\r\n      utils.validFormAndInvoke(this.$refs['updateUserForm'], () => {\r\n        user.updateCurrentUser(this.currentUserInfo2).then((resp) => {\r\n          if (resp.code === 200) {\r\n            this.$notify({\r\n              title: 'Tips',\r\n              message: resp.message,\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n            this.logout()\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import \"../../assets/css/index/main\";\r\n\r\n</style>\r\n"]}]}