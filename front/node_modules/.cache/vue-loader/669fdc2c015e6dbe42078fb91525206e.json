{"remainingRequest":"D:\\termination project\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\termination project\\front\\src\\views\\teacher\\StatisticOverview.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\termination project\\front\\src\\views\\teacher\\StatisticOverview.vue","mtime":1683868137480},{"path":"D:\\termination project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\termination project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgc3RhdGlzdGljIGZyb20gJ0AvYXBpL3N0YXRpc3RpYycNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnU3RhdGlzdGljT3ZlcnZpZXcnLA0KICBkYXRhICgpIHsNCiAgICByZXR1cm4gew0KICAgICAgLy/ogIPor5XlkI3np7ANCiAgICAgIGV4YW1OYW1lczogW10sDQogICAgICAvL+iAg+ivlemAmui/h+eOhw0KICAgICAgcGFzc1JhdGU6IFtdLA0KICAgICAgLy/ppbzlm77nmoTmlbDmja4NCiAgICAgIHBpZURhdGE6IFtdLA0KICAgIH0NCiAgfSwNCiAgY3JlYXRlZCAoKSB7DQogICAgLy/pobXpnaLmlbDmja7liqDovb3nmoTnrYnlvoXnirbmgIHmoI8NCiAgICB0aGlzLmxvYWRpbmcgPSB0aGlzLiRMb2FkaW5nLnNlcnZpY2Uoew0KICAgICAgYm9keTogdHJ1ZSwNCiAgICAgIGxvY2s6IHRydWUsDQogICAgICB0ZXh0OiAn5pWw5o2u5ou85ZG95Yqg6L295LitLCgq4pW54pa94pW5KiknLA0KICAgICAgc3Bpbm5lcjogJ2VsLWljb24tbG9hZGluZycsDQogICAgfSkNCiAgICB0aGlzLmdldEV4YW1QYXNzUmF0ZSgpDQogICAgdGhpcy5nZXRFeGFtTnVtYmVycygpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBnZXRFeGFtUGFzc1JhdGUgKCkgew0KICAgICAgYXdhaXQgc3RhdGlzdGljLmdldEV4YW1QYXNzUmF0ZSgpLnRoZW4oKHJlc3ApID0+IHsNCiAgICAgICAgaWYgKHJlc3AuY29kZSA9PT0gMjAwKSB7DQogICAgICAgICAgdGhpcy5leGFtTmFtZXMgPSByZXNwLmRhdGFbMF0uc3BsaXQoJywnKQ0KICAgICAgICAgIHRoaXMucGFzc1JhdGUgPSByZXNwLmRhdGFbMV0uc3BsaXQoJywnKQ0KICAgICAgICAgIHRoaXMuZHJhd0xpbmUoKQ0KICAgICAgICAgIHRoaXMuZHJhd0Jyb2tlbkxpbmUoKQ0KICAgICAgICAgIHRoaXMuZHJhd0ltZzQoKQ0KICAgICAgICAgIHRoaXMubG9hZGluZy5jbG9zZSgpDQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfSwNCiAgICAvL+iAg+ivlemAmui/h+eOh+afseeKtuWbvg0KICAgIGRyYXdMaW5lICgpIHsNCiAgICAgIC8vIOWfuuS6juWHhuWkh+WlveeahGRvbe+8jOWIneWni+WMlmVjaGFydHPlrp7kvosNCiAgICAgIGxldCBteUNoYXJ0ID0gdGhpcy4kZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbWcxJykpDQogICAgICAvLyDnu5jliLblm77ooagNCiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKHsNCiAgICAgICAgdGl0bGU6IHsNCiAgICAgICAgICB0ZXh0OiAnRXhhbSBwYXNzIHJhdGUnLA0KICAgICAgICAgIHN1YnRleHQ6ICdkYXNoYm9yZDEnLA0KICAgICAgICAgIHg6ICdjZW50ZXInLA0KICAgICAgICAgIHk6ICd0b3AnLA0KICAgICAgICAgIHRleHRBbGlnbjogJ2NlbnRlcicNCiAgICAgICAgfSwNCiAgICAgICAgdG9vbHRpcDoge30sDQogICAgICAgIHhBeGlzOiB7DQogICAgICAgICAgZGF0YTogdGhpcy5leGFtTmFtZXMNCiAgICAgICAgfSwNCiAgICAgICAgeUF4aXM6IHt9LA0KICAgICAgICBzZXJpZXM6IFt7DQogICAgICAgICAgbmFtZTogJ+mAmui/h+eOhycsDQogICAgICAgICAgdHlwZTogJ2JhcicsDQogICAgICAgICAgZGF0YTogdGhpcy5wYXNzUmF0ZQ0KICAgICAgICB9XQ0KICAgICAgfSkNCiAgICB9LA0KICAgIC8v6I635Y+W6ICD6K+V5qyh5pWw5pWw5o2uDQogICAgYXN5bmMgZ2V0RXhhbU51bWJlcnMgKCkgew0KICAgICAgYXdhaXQgc3RhdGlzdGljLmdldEV4YW1OdW1iZXJzKCkudGhlbigocmVzcCkgPT4gew0KICAgICAgICBjb25zb2xlLmxvZyhyZXNwKQ0KICAgICAgICBsZXQgZXhhbU5hbWVzID0gcmVzcC5kYXRhWzBdLnNwbGl0KCcsJykNCiAgICAgICAgbGV0IGV4YW1OdW1iZXJzID0gcmVzcC5kYXRhWzFdLnNwbGl0KCcsJykNCiAgICAgICAgZXhhbU5hbWVzLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7DQogICAgICAgICAgdGhpcy5waWVEYXRhLnB1c2goew0KICAgICAgICAgICAgbmFtZTogaXRlbSwNCiAgICAgICAgICAgIHZhbHVlOiBwYXJzZUludChleGFtTnVtYmVyc1tpbmRleF0pDQogICAgICAgICAgfSkNCiAgICAgICAgfSkNCiAgICAgICAgdGhpcy5kcmF3UGllKCkNCiAgICAgIH0pDQogICAgfSwNCiAgICAvL+iAg+ivleasoeaVsOmlvOWbvg0KICAgIGRyYXdQaWUgKCkgew0KICAgICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iw0KICAgICAgbGV0IG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltZzInKSkNCiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKHsNCiAgICAgICAgdGl0bGU6IHsNCiAgICAgICAgICB0ZXh0OiAnUmF0aW8gb2YgdGVzdCB0aW1lcycsDQogICAgICAgICAgc3VidGV4dDogJ2Rhc2hib3JkMicsDQogICAgICAgICAgeDogJ2NlbnRlcicNCiAgICAgICAgfSwNCiAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJywNCiAgICAgICAgICBmb3JtYXR0ZXI6ICd7YX0gPGJyLz57Yn0gOiB7Y33mrKEgKHtkfSUpJw0KICAgICAgICB9LA0KICAgICAgICBsZWdlbmQ6IHsNCiAgICAgICAgICBvcmllbnQ6ICd2ZXJ0aWNhbCcsDQogICAgICAgICAgbGVmdDogJ2xlZnQnLA0KICAgICAgICAgIGRhdGE6IHRoaXMucGllRGF0YQ0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBuYW1lOiAn6ICD6K+V5qyh5pWwJywNCiAgICAgICAgICAgIHR5cGU6ICdwaWUnLA0KICAgICAgICAgICAgcmFkaXVzOiAnNTUlJywNCiAgICAgICAgICAgIGRhdGE6IHRoaXMucGllRGF0YSwNCiAgICAgICAgICAgIHJvc2VUeXBlOiAnYW5nbGUnLA0KICAgICAgICAgICAgaXRlbVN0eWxlOiB7DQogICAgICAgICAgICAgIG5vcm1hbDogew0KICAgICAgICAgICAgICAgIHNoYWRvd0JsdXI6IDIwMCwNCiAgICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC41KScNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgXQ0KICAgICAgfSkNCiAgICB9LA0KICAgIC8v6YCa6L+H546H55qE5oqY57q/5Zu+DQogICAgZHJhd0Jyb2tlbkxpbmUgKCkgew0KICAgICAgLy/liJ3lp4vljJZlaGNoYXJ0c+WunuS+iw0KICAgICAgbGV0IG15Q2hhcnQgPSB0aGlzLiRlY2hhcnRzLmluaXQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2ltZzMnKSkNCiAgICAgIC8v5oyH5a6a5Zu+6KGo55qE6YWN572u6aG55ZKM5pWw5o2uDQogICAgICB2YXIgb3B0aW9uID0gew0KICAgICAgICAvL+agh+mimA0KICAgICAgICB0aXRsZTogew0KICAgICAgICAgIHRleHQ6ICdUZXN0IHBhc3MgcmF0ZSBsaW5lIGdyYXBoJywNCiAgICAgICAgICB4OiAnY2VudGVyJw0KICAgICAgICB9LA0KICAgICAgICAvL3jovbQNCiAgICAgICAgeEF4aXM6IHsNCiAgICAgICAgICBkYXRhOiB0aGlzLmV4YW1OYW1lcw0KICAgICAgICB9LA0KICAgICAgICAvL3novbTmsqHmnInmmL7lvI/orr7nva7vvIzmoLnmja7lgLzoh6rliqjnlJ/miJB56L20DQogICAgICAgIHlBeGlzOiB7fSwNCiAgICAgICAgLy/mlbDmja4tZGF0YeaYr+acgOe7iOimgeaYvuekuueahOaVsOaNrg0KICAgICAgICBzZXJpZXM6IFt7DQogICAgICAgICAgbmFtZTogJ+mAmui/h+eOhycsDQogICAgICAgICAgdHlwZTogJ2xpbmUnLA0KICAgICAgICAgIGFyZWFTdHlsZTogew0KICAgICAgICAgICAgbm9ybWFsOiB7fQ0KICAgICAgICAgIH0sDQogICAgICAgICAgZGF0YTogdGhpcy5wYXNzUmF0ZQ0KICAgICAgICB9XSwNCiAgICAgIH0NCiAgICAgIC8v5L2/55So5Yia5Yia5oyH5a6a55qE6YWN572u6aG55ZKM5pWw5o2u6aG55pi+56S65Zu+6KGoDQogICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pDQogICAgfSwNCiAgICBkcmF3SW1nNCAoKSB7DQogICAgICBsZXQgbXlDaGFydCA9IHRoaXMuJGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW1nNCcpKQ0KICAgICAgbXlDaGFydC5zZXRPcHRpb24oew0KICAgICAgICBjb2xvcjogWycjY2Q1YzVjJ10sDQogICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgIGNvbG9yOiAnYmxhY2snDQogICAgICAgIH0sDQogICAgICAgIHRvb2x0aXA6IHsNCiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsDQogICAgICAgICAgYXhpc1BvaW50ZXI6IHsNCiAgICAgICAgICAgIHR5cGU6ICdzaGFkb3cnDQogICAgICAgICAgfSwNCiAgICAgICAgICBmb3JtYXR0ZXI6ICd7YX0gPGJyLz57Yn0gOiB7Y30nDQogICAgICAgIH0sDQoNCiAgICAgICAgZ3JpZDogew0KICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQ0KICAgICAgICB9LA0KICAgICAgICB4QXhpczogew0KICAgICAgICAgIHR5cGU6ICd2YWx1ZScsDQogICAgICAgICAgYm91bmRhcnlHYXA6IFswLCAwLjAxXSwNCiAgICAgICAgICBheGlzTGluZTogew0KICAgICAgICAgICAgbGluZVN0eWxlOiB7DQogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgfSwNCiAgICAgICAgICAnYXhpc0xhYmVsJzogew0KICAgICAgICAgICAgJ2ludGVydmFsJzogMCwNCiAgICAgICAgICAgIGZvbnRTaXplOiAxOCwNCiAgICAgICAgICAgIGZvcm1hdHRlcjogJ3t2YWx1ZX0nLA0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgeUF4aXM6IHsNCiAgICAgICAgICBheGlzTGluZTogew0KICAgICAgICAgICAgbGluZVN0eWxlOiB7DQogICAgICAgICAgICAgIGNvbG9yOiAnI2ZmZicNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgfSwNCiAgICAgICAgICAnYXhpc0xhYmVsJzogew0KICAgICAgICAgICAgJ2ludGVydmFsJzogMCwNCiAgICAgICAgICAgIGZvbnRTaXplOiAxOCwNCiAgICAgICAgICB9LA0KICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsDQogICAgICAgICAgZGF0YTogdGhpcy5leGFtTmFtZXMNCiAgICAgICAgfSwNCiAgICAgICAgc2VyaWVzOiBbew0KICAgICAgICAgIG5hbWU6ICfpgJrov4fnjofvvJonLA0KICAgICAgICAgIHR5cGU6ICdiYXInLA0KICAgICAgICAgIGRhdGE6IHRoaXMucGFzc1JhdGUsDQogICAgICAgIH1dDQogICAgICB9KQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["StatisticOverview.vue"],"names":[],"mappings":";AAifile":"StatisticOverview.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\r\n  <el-container>\r\n\r\n      <el-row>\r\n        <div id=\"img1\" style=\"width: 800px;height:400px;\"></div>\r\n        <div id=\"img2\" style=\"width: 800px;height:400px;\"></div>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <div id=\"img3\" style=\"width: 800px;height:400px;\"></div>\r\n        <div id=\"img4\" style=\"width: 800px;height:400px;\"></div>\r\n      </el-row>\r\n\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport statistic from '@/api/statistic'\r\n\r\nexport default {\r\n  name: 'StatisticOverview',\r\n  data () {\r\n    return {\r\n      //考试名称\r\n      examNames: [],\r\n      //考试通过率\r\n      passRate: [],\r\n      //饼图的数据\r\n      pieData: [],\r\n    }\r\n  },\r\n  created () {\r\n    //页面数据加载的等待状态栏\r\n    this.loading = this.$Loading.service({\r\n      body: true,\r\n      lock: true,\r\n      text: '数据拼命加载中,(*╹▽╹*)',\r\n      spinner: 'el-icon-loading',\r\n    })\r\n    this.getExamPassRate()\r\n    this.getExamNumbers()\r\n  },\r\n  methods: {\r\n    async getExamPassRate () {\r\n      await statistic.getExamPassRate().then((resp) => {\r\n        if (resp.code === 200) {\r\n          this.examNames = resp.data[0].split(',')\r\n          this.passRate = resp.data[1].split(',')\r\n          this.drawLine()\r\n          this.drawBrokenLine()\r\n          this.drawImg4()\r\n          this.loading.close()\r\n        }\r\n      })\r\n    },\r\n    //考试通过率柱状图\r\n    drawLine () {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      let myChart = this.$echarts.init(document.getElementById('img1'))\r\n      // 绘制图表\r\n      myChart.setOption({\r\n        title: {\r\n          text: 'Exam pass rate',\r\n          subtext: 'dashbord1',\r\n          x: 'center',\r\n          y: 'top',\r\n          textAlign: 'center'\r\n        },\r\n        tooltip: {},\r\n        xAxis: {\r\n          data: this.examNames\r\n        },\r\n        yAxis: {},\r\n        series: [{\r\n          name: '通过率',\r\n          type: 'bar',\r\n          data: this.passRate\r\n        }]\r\n      })\r\n    },\r\n    //获取考试次数数据\r\n    async getExamNumbers () {\r\n      await statistic.getExamNumbers().then((resp) => {\r\n        console.log(resp)\r\n        let examNames = resp.data[0].split(',')\r\n        let examNumbers = resp.data[1].split(',')\r\n        examNames.forEach((item, index) => {\r\n          this.pieData.push({\r\n            name: item,\r\n            value: parseInt(examNumbers[index])\r\n          })\r\n        })\r\n        this.drawPie()\r\n      })\r\n    },\r\n    //考试次数饼图\r\n    drawPie () {\r\n      // 基于准备好的dom，初始化echarts实例\r\n      let myChart = this.$echarts.init(document.getElementById('img2'))\r\n      myChart.setOption({\r\n        title: {\r\n          text: 'Ratio of test times',\r\n          subtext: 'dashbord2',\r\n          x: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item',\r\n          formatter: '{a} <br/>{b} : {c}次 ({d}%)'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left',\r\n          data: this.pieData\r\n        },\r\n        series: [\r\n          {\r\n            name: '考试次数',\r\n            type: 'pie',\r\n            radius: '55%',\r\n            data: this.pieData,\r\n            roseType: 'angle',\r\n            itemStyle: {\r\n              normal: {\r\n                shadowBlur: 200,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      })\r\n    },\r\n    //通过率的折线图\r\n    drawBrokenLine () {\r\n      //初始化ehcharts实例\r\n      let myChart = this.$echarts.init(document.getElementById('img3'))\r\n      //指定图表的配置项和数据\r\n      var option = {\r\n        //标题\r\n        title: {\r\n          text: 'Test pass rate line graph',\r\n          x: 'center'\r\n        },\r\n        //x轴\r\n        xAxis: {\r\n          data: this.examNames\r\n        },\r\n        //y轴没有显式设置，根据值自动生成y轴\r\n        yAxis: {},\r\n        //数据-data是最终要显示的数据\r\n        series: [{\r\n          name: '通过率',\r\n          type: 'line',\r\n          areaStyle: {\r\n            normal: {}\r\n          },\r\n          data: this.passRate\r\n        }],\r\n      }\r\n      //使用刚刚指定的配置项和数据项显示图表\r\n      myChart.setOption(option)\r\n    },\r\n    drawImg4 () {\r\n      let myChart = this.$echarts.init(document.getElementById('img4'))\r\n      myChart.setOption({\r\n        color: ['#cd5c5c'],\r\n        textStyle: {\r\n          color: 'black'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'shadow'\r\n          },\r\n          formatter: '{a} <br/>{b} : {c}'\r\n        },\r\n\r\n        grid: {\r\n          containLabel: true\r\n        },\r\n        xAxis: {\r\n          type: 'value',\r\n          boundaryGap: [0, 0.01],\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#fff'\r\n            },\r\n          },\r\n          'axisLabel': {\r\n            'interval': 0,\r\n            fontSize: 18,\r\n            formatter: '{value}',\r\n          }\r\n        },\r\n        yAxis: {\r\n          axisLine: {\r\n            lineStyle: {\r\n              color: '#fff'\r\n            },\r\n          },\r\n          'axisLabel': {\r\n            'interval': 0,\r\n            fontSize: 18,\r\n          },\r\n          type: 'category',\r\n          data: this.examNames\r\n        },\r\n        series: [{\r\n          name: '通过率：',\r\n          type: 'bar',\r\n          data: this.passRate,\r\n        }]\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n\r\n.el-container {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.el-container {\r\n  animation: leftMoveIn .7s ease-in;\r\n}\r\n\r\n@keyframes leftMoveIn {\r\n  0% {\r\n    transform: translateX(-100%);\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    transform: translateX(0%);\r\n    opacity: 1;\r\n  }\r\n}\r\n</style>\r\n"]}]}