{"remainingRequest":"D:\\termination project\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\termination project\\front\\src\\views\\student\\ExamResult.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\termination project\\front\\src\\views\\student\\ExamResult.vue","mtime":1682620702752},{"path":"D:\\termination project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\termination project\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\termination project\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgZXhhbSBmcm9tICdAL2FwaS9leGFtJw0KaW1wb3J0IHF1ZXN0aW9uIGZyb20gJ0AvYXBpL3F1ZXN0aW9uJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdFeGFtUmVzdWx0JywNCiAgZGF0YSAoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIC8v6ICD6K+V6K6w5b2V5L+h5oGvDQogICAgICBleGFtUmVjb3JkOiB7fSwNCiAgICAgIC8v6ICD6K+V55qE5L+h5oGvDQogICAgICBleGFtSW5mbzoge30sDQogICAgICAvL+W9k+WJjeiAg+ivleeahOmimOebrg0KICAgICAgcXVlc3Rpb25JbmZvOiBbXSwNCiAgICAgIC8v6aG16Z2i5Yqg6L29DQogICAgICBsb2FkaW5nOiB7fSwNCiAgICAgIC8v562U5qGI55qE6YCJ6aG55ZCNYWJjZOaVsOaNrg0KICAgICAgb3B0aW9uTmFtZTogWydBJywgJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSwNCiAgICAgIC8v5Zu+54mH5Zue5pi+55qEdXJsDQogICAgICBiaWdJbWdVcmw6ICcnLA0KICAgICAgLy/lm77niYflm57mmL7nmoTlr7nor53moYbmmK/lkKbmmL7npLoNCiAgICAgIGJpZ0ltZ0RpYWxvZzogZmFsc2UsDQogICAgICAvL+eUqOaIt+WbnuetlOeahOetlOahiA0KICAgICAgdXNlckFuc3dlcjogW10sDQogICAgICAvL+WNlemimOeahOWIhuWAvA0KICAgICAgcXVlc3Rpb25TY29yZTogbmV3IE1hcCgpDQogICAgfQ0KICB9LA0KICBwcm9wczogWyd0YWdJbmZvJ10sDQogIGNyZWF0ZWQgKCkgew0KICAgIC8v5LiA5Yib5bu65bCx5pS55Y+Y5aS06YOo55qE6Z2i5YyF5bGRDQogICAgdGhpcy4kZW1pdCgnZ2l2ZUNoaWxkQ2hhbmdlQnJlYWtJbmZvJywgJ0V4YW1pbmF0aW9uIHJlc3VsdCcsICdFeGFtaW5hdGlvbiByZXN1bHQnKQ0KICAgIHRoaXMuY3JlYXRlVGFnc0luUGFyZW50KCkNCiAgICB0aGlzLmdldEV4YW1SZWNvcmQoKQ0KDQogICAgLy/pobXpnaLmlbDmja7liqDovb3nmoTnrYnlvoXnirbmgIHmoI8NCiAgICB0aGlzLmxvYWRpbmcgPSB0aGlzLiRMb2FkaW5nLnNlcnZpY2Uoew0KICAgICAgYm9keTogdHJ1ZSwNCiAgICAgIGxvY2s6IHRydWUsDQogICAgICB0ZXh0OiAn5pWw5o2u5ou85ZG95Yqg6L295LitLCgq4pW54pa94pW5KiknLA0KICAgICAgc3Bpbm5lcjogJ2VsLWljb24tbG9hZGluZycsDQogICAgfSkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8v5ZCR54i257uE5Lu25Lit5re75Yqg5aS06YOo55qEdGFnc+agh+etvg0KICAgIGNyZWF0ZVRhZ3NJblBhcmVudCAoKSB7DQogICAgICBsZXQgZmxhZyA9IGZhbHNlDQogICAgICB0aGlzLnRhZ0luZm8ubWFwKGl0ZW0gPT4gew0KICAgICAgICAvL+WmguaenHRhZ3Plhajpg6jnrKblkIgNCiAgICAgICAgaWYgKGl0ZW0ubmFtZSA9PT0gJ+iAg+ivlee7k+aenCcgJiYgaXRlbS51cmwgPT09IHRoaXMuJHJvdXRlLnBhdGgpIHsNCiAgICAgICAgICBmbGFnID0gdHJ1ZQ0KICAgICAgICB9IGVsc2UgaWYgKGl0ZW0ubmFtZSA9PT0gJ+iAg+ivlee7k+aenCcgJiYgaXRlbS51cmwgIT09IHRoaXMuJHJvdXRlLnBhdGgpIHsNCiAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGVUYWdJbmZvJywgJ+iAg+ivlee7k+aenCcsIHRoaXMuJHJvdXRlLnBhdGgpDQogICAgICAgICAgZmxhZyA9IHRydWUNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICAgIGlmICghZmxhZykgdGhpcy4kZW1pdCgnZ2l2ZUNoaWxkQWRkVGFnJywgJ+iAg+ivlee7k+aenCcsIHRoaXMuJHJvdXRlLnBhdGgpDQogICAgfSwNCiAgICAvL+afpeivoueUqOaIt+W9k+aXtuiAg+ivleeahOS/oeaBrw0KICAgIGdldEV4YW1SZWNvcmQgKCkgew0KICAgICAgZXhhbS5nZXRFeGFtUmVjb3JkQnlJZCh0aGlzLiRyb3V0ZS5wYXJhbXMucmVjb3JkSWQpLnRoZW4oKHJlc3ApID0+IHsNCiAgICAgICAgaWYgKHJlc3AuY29kZSA9PT0gMjAwKSB7DQogICAgICAgICAgdGhpcy5leGFtUmVjb3JkID0gcmVzcC5kYXRhDQogICAgICAgICAgdGhpcy5nZXRFeGFtSW5mb0J5SWQocmVzcC5kYXRhLmV4YW1JZCkNCiAgICAgICAgICB0aGlzLnVzZXJBbnN3ZXIgPSByZXNwLmRhdGEudXNlckFuc3dlcnMuc3BsaXQoJy0nKQ0KICAgICAgICAgIC8v6I635Y+W5Y2V6aKY55qE5YiG5YC8DQogICAgICAgICAgdGhpcy5nZXRRdWVzdGlvblNjb3JlKHJlc3AuZGF0YS5leGFtSWQpDQogICAgICAgICAgLy/ojrflj5bmiYDmnInpopjnm67kv6Hmga8NCiAgICAgICAgICB0aGlzLmdldFF1ZXN0aW9uSW5mb0J5SWRzKHJlc3AuZGF0YS5xdWVzdGlvbklkcykNCiAgICAgICAgICAvL+aVsOaNruWKoOi9veWujOavlQ0KICAgICAgICAgIHRoaXMubG9hZGluZy5jbG9zZSgpDQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfSwNCiAgICAvL+agueaNruiAg+ivlWlk5p+l6K+i6ICD6K+V5L+h5oGvDQogICAgZ2V0RXhhbUluZm9CeUlkIChleGFtSWQpIHsNCiAgICAgIGV4YW0uZ2V0RXhhbUluZm9CeUlkKHsgJ2V4YW1JZCc6IGV4YW1JZCB9KS50aGVuKChyZXNwKSA9PiB7DQogICAgICAgIGlmIChyZXNwLmNvZGUgPT09IDIwMCkgdGhpcy5leGFtSW5mbyA9IHJlc3AuZGF0YQ0KICAgICAgfSkNCiAgICB9LA0KICAgIC8v5qC55o2uaWRz5p+l6K+i6aKY55uu5L+h5oGvDQogICAgYXN5bmMgZ2V0UXVlc3Rpb25JbmZvQnlJZHMgKHF1ZXN0aW9uSWRzKSB7DQogICAgICBhd2FpdCBxdWVzdGlvbi5nZXRRdWVzdGlvbkJ5SWRzKHsgaWRzOiBxdWVzdGlvbklkcyB9KS50aGVuKChyZXNwKSA9PiB7DQogICAgICAgIGlmIChyZXNwLmNvZGUgPT09IDIwMCkgew0KICAgICAgICAgIHRoaXMucXVlc3Rpb25JbmZvID0gcmVzcD8uZGF0YT8uZGF0YSB8fCBbXQ0KICAgICAgICAgIC8v6YeN572u6Zeu6aKY55qE6aG65bqPIOWNlemAiSDlpJrpgIkg5Yik5patIOeugOetlA0KICAgICAgICAgIHRoaXMucXVlc3Rpb25JbmZvID0gdGhpcy5xdWVzdGlvbkluZm8uc29ydChmdW5jdGlvbiAoYSwgYikgew0KICAgICAgICAgICAgcmV0dXJuIGEucXVlc3Rpb25UeXBlIC0gYi5xdWVzdGlvblR5cGUNCiAgICAgICAgICB9KQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgLy/ngrnlh7vlsZXnpLrpq5jmuIXlpKflm74NCiAgICBzaG93QmlnSW1nICh1cmwpIHsNCiAgICAgIHRoaXMuYmlnSW1nVXJsID0gdXJsDQogICAgICB0aGlzLmJpZ0ltZ0RpYWxvZyA9IHRydWUNCiAgICB9LA0KICAgIC8v5qC55o2u6ICD6K+VaWTmn6Xor6LogIPor5XkuK3mr4/kuIDpopjnmoTliIbmlbANCiAgICBhc3luYyBnZXRRdWVzdGlvblNjb3JlIChleGFtSWQpIHsNCiAgICAgIGF3YWl0IGV4YW0uZ2V0RXhhbVF1ZXN0aW9uQnlFeGFtSWQoZXhhbUlkKS50aGVuKChyZXNwKSA9PiB7DQogICAgICAgIGlmIChyZXNwLmNvZGUgPT09IDIwMCkgew0KICAgICAgICAgIC8v6K6+572u5Y2V6aKY5YiG5YC857uZbWFwDQogICAgICAgICAgY29uc3Qgc2NvcmVzID0gcmVzcC5kYXRhLnNjb3Jlcy5zcGxpdCgnLCcpDQogICAgICAgICAgcmVzcC5kYXRhLnF1ZXN0aW9uSWRzLnNwbGl0KCcsJykuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHsNCiAgICAgICAgICAgIC8vIHRoaXMuJHNldCh0aGlzLnF1ZXN0aW9uU2NvcmUsIGl0ZW0sIHNjb3Jlc1tpbmRleF0pDQogICAgICAgICAgICB0aGlzLnF1ZXN0aW9uU2NvcmUuc2V0KGl0ZW0sIHNjb3Jlc1tpbmRleF0pDQogICAgICAgICAgfSkNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["ExamResult.vue"],"names":[],"mappings":";AAiGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ExamResult.vue","sourceRoot":"src/views/student","sourcesContent":["<template>\r\n  <el-container>\r\n    <el-header height=\"150\">\r\n      <el-card style=\"height: 150px\">\r\n        <span class=\"examName\">{{ examInfo.examName }}</span>\r\n        <span class=\"examTime\">{{ examRecord.examTime }}</span>\r\n\r\n        <el-row style=\"margin-top: 55px;\">\r\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"包括(单选,多选,判断题)\" placement=\"top-start\">\r\n             <span style=\"font-weight: 800;font-size: 17px\">\r\n          Logic section score: {{ examRecord.logicScore }}分</span>\r\n          </el-tooltip>\r\n\r\n          <el-tooltip class=\"item\" effect=\"dark\" content=\"简答题与逻辑题\" placement=\"top-start\">\r\n          <span style=\"float: right;font-weight: 800;font-size: 17px\">\r\n          Total score: {{ examInfo.totalScore }}分</span>\r\n          </el-tooltip>\r\n        </el-row>\r\n\r\n      </el-card>\r\n\r\n    </el-header>\r\n\r\n    <el-main>\r\n      <el-card>\r\n        <!--题目信息-->\r\n        <div v-for=\"(item,index) in questionInfo\" :key=\"index\" style=\"margin-top: 15px\">\r\n          <div>\r\n            <i class=\"num\">{{ index + 1 }}</i>\r\n            <span v-if=\"item.questionType === 1\">【choose the best answer】</span>\r\n            <span v-else-if=\"item.questionType === 2\">【choose all that applies】</span>\r\n            <span v-else-if=\"item.questionType === 3\">【true or false】</span>\r\n            <span v-else>【short answer】</span>\r\n            <span>{{ item.questionContent }}:</span>\r\n            <span style=\"color: red;font-style: italic;font-weight: 400;\">&nbsp;{{\r\n                questionScore.get(String(item.questionId))\r\n              }}分</span>\r\n          </div>\r\n          <!--题目中的配图-->\r\n          <img v-for=\"url in item.images\" :src=\"url\" title=\"click to enhance image\" alt=\"question image\"\r\n               style=\"width: 100px;height: 100px;cursor: pointer\" @click=\"showBigImg(url)\">\r\n\r\n          <!--单选 和 判断 的答案列表-->\r\n          <div style=\"margin-top: 25px\"\r\n               v-show=\"item.questionType === 1 || item.questionType === 3\">\r\n            <div class=\"el-radio-group\">\r\n              <label v-for=\"(i2,index2) in item.answer\"\r\n                     :class=\"String(index2) === userAnswer[index] && i2.isTrue === 'true' ?\r\n                      'activeAndTrue' : String(index2) === userAnswer[index] ? 'active' :\r\n                       i2.isTrue === 'true' ? 'true' : ''\">\r\n                <span>{{ optionName[index2] + '、' + i2.answer }}</span>\r\n                <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\r\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"click to enhance image\"\r\n                     v-if=\"i2.images !== null\"\r\n                     v-for=\"i3 in i2.images\" :src=\"i3\" alt=\"\" @mouseover=\"showBigImg(i3)\">\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <!--多选的答案列表-->\r\n          <div style=\"margin-top: 25px\" v-show=\"item.questionType === 2\">\r\n            <div class=\"el-radio-group\">\r\n              <label v-for=\"(i2,index2) in item.answer\"\r\n                     :class=\"(userAnswer[index]+'').indexOf(index2+'') !== -1 && i2.isTrue === 'true'\r\n                     ? 'activeAndTrue' : (userAnswer[index]+'').indexOf(index2+'') !== -1 ? 'active' :\r\n                       i2.isTrue === 'true' ? 'true' : ''\">\r\n                <span>{{ optionName[index] + '、' + i2.answer }}</span>\r\n                <img style=\"position: absolute;left:100%;top:50%;transform: translateY(-50%);\r\n                  width: 40px;height: 40px;float: right;cursor: pointer;\" title=\"click to enhance image\"\r\n                     v-if=\"i2.images !== null\"\r\n                     v-for=\"i3 in i2.images\" :src=\"i3\" alt=\"\" @mouseover=\"showBigImg(i3)\">\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <!--简答题的答案-->\r\n          <div style=\"margin-top: 25px\" v-show=\"item.questionType === 4\">\r\n            <div class=\"ques-analysis\">\r\n              <h3 style=\"font-weight: 400\">My answer: </h3>\r\n              <p style=\"font-weight: 400;color: orange\"> {{ userAnswer[index] }} </p>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n      </el-card>\r\n    </el-main>\r\n\r\n    <!--图片回显-->\r\n    <el-dialog :visible.sync=\"bigImgDialog\" @close=\"bigImgDialog = false\">\r\n      <img style=\"width: 100%\" :src=\"bigImgUrl\">\r\n    </el-dialog>\r\n  </el-container>\r\n</template>\r\n\r\n<script>\r\nimport exam from '@/api/exam'\r\nimport question from '@/api/question'\r\n\r\nexport default {\r\n  name: 'ExamResult',\r\n  data () {\r\n    return {\r\n      //考试记录信息\r\n      examRecord: {},\r\n      //考试的信息\r\n      examInfo: {},\r\n      //当前考试的题目\r\n      questionInfo: [],\r\n      //页面加载\r\n      loading: {},\r\n      //答案的选项名abcd数据\r\n      optionName: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],\r\n      //图片回显的url\r\n      bigImgUrl: '',\r\n      //图片回显的对话框是否显示\r\n      bigImgDialog: false,\r\n      //用户回答的答案\r\n      userAnswer: [],\r\n      //单题的分值\r\n      questionScore: new Map()\r\n    }\r\n  },\r\n  props: ['tagInfo'],\r\n  created () {\r\n    //一创建就改变头部的面包屑\r\n    this.$emit('giveChildChangeBreakInfo', 'Examination result', 'Examination result')\r\n    this.createTagsInParent()\r\n    this.getExamRecord()\r\n\r\n    //页面数据加载的等待状态栏\r\n    this.loading = this.$Loading.service({\r\n      body: true,\r\n      lock: true,\r\n      text: '数据拼命加载中,(*╹▽╹*)',\r\n      spinner: 'el-icon-loading',\r\n    })\r\n  },\r\n  methods: {\r\n    //向父组件中添加头部的tags标签\r\n    createTagsInParent () {\r\n      let flag = false\r\n      this.tagInfo.map(item => {\r\n        //如果tags全部符合\r\n        if (item.name === '考试结果' && item.url === this.$route.path) {\r\n          flag = true\r\n        } else if (item.name === '考试结果' && item.url !== this.$route.path) {\r\n          this.$emit('updateTagInfo', '考试结果', this.$route.path)\r\n          flag = true\r\n        }\r\n      })\r\n      if (!flag) this.$emit('giveChildAddTag', '考试结果', this.$route.path)\r\n    },\r\n    //查询用户当时考试的信息\r\n    getExamRecord () {\r\n      exam.getExamRecordById(this.$route.params.recordId).then((resp) => {\r\n        if (resp.code === 200) {\r\n          this.examRecord = resp.data\r\n          this.getExamInfoById(resp.data.examId)\r\n          this.userAnswer = resp.data.userAnswers.split('-')\r\n          //获取单题的分值\r\n          this.getQuestionScore(resp.data.examId)\r\n          //获取所有题目信息\r\n          this.getQuestionInfoByIds(resp.data.questionIds)\r\n          //数据加载完毕\r\n          this.loading.close()\r\n        }\r\n      })\r\n    },\r\n    //根据考试id查询考试信息\r\n    getExamInfoById (examId) {\r\n      exam.getExamInfoById({ 'examId': examId }).then((resp) => {\r\n        if (resp.code === 200) this.examInfo = resp.data\r\n      })\r\n    },\r\n    //根据ids查询题目信息\r\n    async getQuestionInfoByIds (questionIds) {\r\n      await question.getQuestionByIds({ ids: questionIds }).then((resp) => {\r\n        if (resp.code === 200) {\r\n          this.questionInfo = resp?.data?.data || []\r\n          //重置问题的顺序 单选 多选 判断 简答\r\n          this.questionInfo = this.questionInfo.sort(function (a, b) {\r\n            return a.questionType - b.questionType\r\n          })\r\n        }\r\n      })\r\n    },\r\n    //点击展示高清大图\r\n    showBigImg (url) {\r\n      this.bigImgUrl = url\r\n      this.bigImgDialog = true\r\n    },\r\n    //根据考试id查询考试中每一题的分数\r\n    async getQuestionScore (examId) {\r\n      await exam.getExamQuestionByExamId(examId).then((resp) => {\r\n        if (resp.code === 200) {\r\n          //设置单题分值给map\r\n          const scores = resp.data.scores.split(',')\r\n          resp.data.questionIds.split(',').forEach((item, index) => {\r\n            // this.$set(this.questionScore, item, scores[index])\r\n            this.questionScore.set(item, scores[index])\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n@import \"../../assets/css/student/examResult\";\r\n</style>\r\n"]}]}